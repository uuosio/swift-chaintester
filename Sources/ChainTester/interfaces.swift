/**
 * Autogenerated by Thrift Compiler (0.15.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

import Foundation

import Thrift


public final class TransactionException : Swift.Error {

  public var exc: String


  public init(exc: String) {
    self.exc = exc
  }

}

public final class AssertException : Swift.Error {

  public var error_message: String


  public init(error_message: String) {
    self.error_message = error_message
  }

}

public final class Action {

  public var account: String

  public var action: String

  public var permissions: String

  public var arguments: String


  public init(account: String, action: String, permissions: String, arguments: String) {
    self.account = account
    self.action = action
    self.permissions = permissions
    self.arguments = arguments
  }

}

public final class Uint64 {

  public var rawValue: Data


  public init(rawValue: Data) {
    self.rawValue = rawValue
  }

}

public final class DataBuffer {

  public var size: Int32

  public var buffer: Data


  public init(size: Int32, buffer: Data) {
    self.size = size
    self.buffer = buffer
  }

}

public final class NextPreviousReturn {

  public var iterator: Int32

  public var primary: Uint64


  public init(iterator: Int32, primary: Uint64) {
    self.iterator = iterator
    self.primary = primary
  }

}

public final class IteratorPrimaryReturn {

  public var iterator: Int32

  public var primary: Uint64


  public init(iterator: Int32, primary: Uint64) {
    self.iterator = iterator
    self.primary = primary
  }

}

public final class FindPrimaryReturn {

  public var iterator: Int32

  public var secondary: Data


  public init(iterator: Int32, secondary: Data) {
    self.iterator = iterator
    self.secondary = secondary
  }

}

public final class FindSecondaryReturn {

  public var iterator: Int32

  public var primary: Uint64


  public init(iterator: Int32, primary: Uint64) {
    self.iterator = iterator
    self.primary = primary
  }

}

public final class LowerBoundUpperBoundReturn {

  public var iterator: Int32

  public var secondary: Data

  public var primary: Uint64


  public init(iterator: Int32, secondary: Data, primary: Uint64) {
    self.iterator = iterator
    self.secondary = secondary
    self.primary = primary
  }

}

public final class GetResourceLimitsReturn {

  public var ram_bytes: Int64

  public var net_weight: Int64

  public var cpu_weight: Int64


  public init(ram_bytes: Int64, net_weight: Int64, cpu_weight: Int64) {
    self.ram_bytes = ram_bytes
    self.net_weight = net_weight
    self.cpu_weight = cpu_weight
  }

}

public protocol IPCChainTester {

  ///
  /// - Throws: 
  func init_vm_api() throws

  ///
  /// - Throws: 
  func init_apply_request() throws

  ///
  /// - Parameters:
  ///   - id: 
  ///   - contract: 
  ///   - enable: 
  /// - Throws: 
  func enable_debug_contract(id: Int32, contract: String, enable: Bool) throws

  ///
  /// - Parameters:
  ///   - id: 
  ///   - contract: 
  /// - Returns: Bool
  /// - Throws: 
  func is_debug_contract_enabled(id: Int32, contract: String) throws -> Bool

  ///
  /// - Parameters:
  ///   - abi: 
  /// - Returns: Data
  /// - Throws: 
  func pack_abi(abi: String) throws -> Data

  ///
  /// - Parameters:
  ///   - id: 
  ///   - contract: 
  ///   - action: 
  ///   - action_args: 
  /// - Returns: Data
  /// - Throws: 
  func pack_action_args(id: Int32, contract: String, action: String, action_args: String) throws -> Data

  ///
  /// - Parameters:
  ///   - id: 
  ///   - contract: 
  ///   - action: 
  ///   - raw_args: 
  /// - Returns: Data
  /// - Throws: 
  func unpack_action_args(id: Int32, contract: String, action: String, raw_args: Data) throws -> Data

  ///
  /// - Returns: Int32
  /// - Throws: 
  func new_chain() throws -> Int32

  ///
  /// - Parameters:
  ///   - id: 
  /// - Returns: Int32
  /// - Throws: 
  func free_chain(id: Int32) throws -> Int32

  ///
  /// - Parameters:
  ///   - id: 
  /// - Returns: String
  /// - Throws: 
  func get_info(id: Int32) throws -> String

  ///
  /// - Parameters:
  ///   - key_type: 
  /// - Returns: String
  /// - Throws: 
  func create_key(key_type: String) throws -> String

  ///
  /// - Parameters:
  ///   - id: 
  ///   - account: 
  /// - Returns: String
  /// - Throws: 
  func get_account(id: Int32, account: String) throws -> String

  ///
  /// - Parameters:
  ///   - id: 
  ///   - creator: 
  ///   - account: 
  ///   - owner_key: 
  ///   - active_key: 
  ///   - ram_bytes: 
  ///   - stake_net: 
  ///   - stake_cpu: 
  /// - Returns: String
  /// - Throws: 
  func create_account(id: Int32, creator: String, account: String, owner_key: String, active_key: String, ram_bytes: Int64, stake_net: Int64, stake_cpu: Int64) throws -> String

  ///
  /// - Parameters:
  ///   - id: 
  ///   - pub_key: 
  ///   - priv_key: 
  /// - Returns: Bool
  /// - Throws: 
  func import_key(id: Int32, pub_key: String, priv_key: String) throws -> Bool

  ///
  /// - Parameters:
  ///   - id: 
  ///   - transaction: 
  ///   - available_keys: 
  /// - Returns: String
  /// - Throws: 
  func get_required_keys(id: Int32, transaction: String, available_keys: TList<String>) throws -> String

  ///
  /// - Parameters:
  ///   - id: 
  ///   - next_block_skip_seconds: 
  /// - Throws: 
  func produce_block(id: Int32, next_block_skip_seconds: Int64) throws

  ///
  /// - Parameters:
  ///   - id: 
  ///   - account: 
  ///   - action: 
  ///   - arguments: 
  ///   - permissions: 
  /// - Returns: Data
  /// - Throws: 
  func push_action(id: Int32, account: String, action: String, arguments: String, permissions: String) throws -> Data

  ///
  /// - Parameters:
  ///   - id: 
  ///   - actions: 
  /// - Returns: Data
  /// - Throws: 
  func push_actions(id: Int32, actions: TList<Action>) throws -> Data

  ///
  /// - Parameters:
  ///   - id: 
  ///   - account: 
  ///   - wasm: 
  ///   - abi: 
  /// - Returns: Data
  /// - Throws: 
  func deploy_contract(id: Int32, account: String, wasm: String, abi: String) throws -> Data

  ///
  /// - Parameters:
  ///   - id: 
  ///   - json: 
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - lower_bound: 
  ///   - upper_bound: 
  ///   - limit: 
  ///   - key_type: 
  ///   - index_position: 
  ///   - reverse: 
  ///   - show_payer: 
  /// - Returns: String
  /// - Throws: 
  func get_table_rows(id: Int32, json: Bool, code: String, scope: String, table: String, lower_bound: String, upper_bound: String, limit: Int64, key_type: String, index_position: String, reverse: Bool, show_payer: Bool) throws -> String

}

open class IPCChainTesterClient : TClient /* , IPCChainTester */ {

}

open class IPCChainTesterProcessor /* IPCChainTester */ {

  typealias ProcessorHandlerDictionary = [String: (Int32, TProtocol, TProtocol, IPCChainTester) throws -> Void]

  public var service: IPCChainTester

  public required init(service: IPCChainTester) {
    self.service = service
  }

}

public protocol PushActions {

  ///
  /// - Parameters:
  ///   - actions: 
  /// - Returns: Int32
  /// - Throws: 
  func push_actions(actions: TList<Action>) throws -> Int32

}

open class PushActionsClient : TClient /* , PushActions */ {

}

open class PushActionsProcessor /* PushActions */ {

  typealias ProcessorHandlerDictionary = [String: (Int32, TProtocol, TProtocol, PushActions) throws -> Void]

  public var service: PushActions

  public required init(service: PushActions) {
    self.service = service
  }

}

public protocol ApplyRequest {

  ///
  /// - Parameters:
  ///   - receiver: 
  ///   - firstReceiver: 
  ///   - action: 
  /// - Returns: Int32
  /// - Throws: 
  func apply_request(receiver: Uint64, firstReceiver: Uint64, action: Uint64) throws -> Int32

  ///
  /// - Returns: Int32
  /// - Throws: 
  func apply_end() throws -> Int32

}

open class ApplyRequestClient : TClient /* , ApplyRequest */ {

}

open class ApplyRequestProcessor /* ApplyRequest */ {

  typealias ProcessorHandlerDictionary = [String: (Int32, TProtocol, TProtocol, ApplyRequest) throws -> Void]

  public var service: ApplyRequest

  public required init(service: ApplyRequest) {
    self.service = service
  }

}

public protocol Apply {

  ///
  /// - Returns: Int32
  /// - Throws: 
  func end_apply() throws -> Int32

  ///
  /// - Returns: Data
  /// - Throws: 
  func get_active_producers() throws -> Data

  ///
  /// - Parameters:
  ///   - account: 
  /// - Returns: GetResourceLimitsReturn
  /// - Throws: 
  func get_resource_limits(account: Uint64) throws -> GetResourceLimitsReturn

  ///
  /// - Parameters:
  ///   - account: 
  ///   - ram_bytes: 
  ///   - net_weight: 
  ///   - cpu_weight: 
  /// - Throws: 
  func set_resource_limits(account: Uint64, ram_bytes: Int64, net_weight: Int64, cpu_weight: Int64) throws

  ///
  /// - Parameters:
  ///   - producer_data: 
  /// - Returns: Int64
  /// - Throws: 
  func set_proposed_producers(producer_data: Data) throws -> Int64

  ///
  /// - Parameters:
  ///   - producer_data_format: 
  ///   - producer_data: 
  /// - Returns: Int64
  /// - Throws: 
  func set_proposed_producers_ex(producer_data_format: Uint64, producer_data: Data) throws -> Int64

  ///
  /// - Parameters:
  ///   - account: 
  /// - Returns: Bool
  /// - Throws: 
  func is_privileged(account: Uint64) throws -> Bool

  ///
  /// - Parameters:
  ///   - account: 
  ///   - is_priv: 
  /// - Throws: 
  func set_privileged(account: Uint64, is_priv: Bool) throws

  ///
  /// - Parameters:
  ///   - data: 
  /// - Throws: 
  func set_blockchain_parameters_packed(data: Data) throws

  ///
  /// - Returns: Data
  /// - Throws: 
  func get_blockchain_parameters_packed() throws -> Data

  ///
  /// - Parameters:
  ///   - feature_digest: 
  /// - Throws: 
  func preactivate_feature(feature_digest: Data) throws

  ///
  /// - Parameters:
  ///   - trx_data: 
  ///   - pubkeys_data: 
  ///   - perms_data: 
  /// - Returns: Int32
  /// - Throws: 
  func check_transaction_authorization(trx_data: Data, pubkeys_data: Data, perms_data: Data) throws -> Int32

  ///
  /// - Parameters:
  ///   - account: 
  ///   - permission: 
  ///   - pubkeys_data: 
  ///   - perms_data: 
  ///   - delay_us: 
  /// - Returns: Int32
  /// - Throws: 
  func check_permission_authorization(account: Uint64, permission: Uint64, pubkeys_data: Data, perms_data: Data, delay_us: Uint64) throws -> Int32

  ///
  /// - Parameters:
  ///   - account: 
  ///   - permission: 
  /// - Returns: Int64
  /// - Throws: 
  func get_permission_last_used(account: Uint64, permission: Uint64) throws -> Int64

  ///
  /// - Parameters:
  ///   - account: 
  /// - Returns: Int64
  /// - Throws: 
  func get_account_creation_time(account: Uint64) throws -> Int64

  ///
  /// - Parameters:
  ///   - cstr: 
  /// - Throws: 
  func prints(cstr: String) throws

  ///
  /// - Parameters:
  ///   - cstr: 
  /// - Throws: 
  func prints_l(cstr: Data) throws

  ///
  /// - Parameters:
  ///   - n: 
  /// - Throws: 
  func printi(n: Int64) throws

  ///
  /// - Parameters:
  ///   - n: 
  /// - Throws: 
  func printui(n: Uint64) throws

  ///
  /// - Parameters:
  ///   - value: 
  /// - Throws: 
  func printi128(value: Data) throws

  ///
  /// - Parameters:
  ///   - value: 
  /// - Throws: 
  func printui128(value: Data) throws

  ///
  /// - Parameters:
  ///   - value: 
  /// - Throws: 
  func printsf(value: Data) throws

  ///
  /// - Parameters:
  ///   - value: 
  /// - Throws: 
  func printdf(value: Data) throws

  ///
  /// - Parameters:
  ///   - value: 
  /// - Throws: 
  func printqf(value: Data) throws

  ///
  /// - Parameters:
  ///   - name: 
  /// - Throws: 
  func printn(name: Uint64) throws

  ///
  /// - Parameters:
  ///   - data: 
  /// - Throws: 
  func printhex(data: Data) throws

  ///
  /// - Returns: Int32
  /// - Throws: 
  func action_data_size() throws -> Int32

  ///
  /// - Returns: Data
  /// - Throws: 
  func read_action_data() throws -> Data

  ///
  /// - Parameters:
  ///   - name: 
  /// - Throws: 
  func require_recipient(name: Uint64) throws

  ///
  /// - Parameters:
  ///   - name: 
  /// - Throws: 
  func require_auth(name: Uint64) throws

  ///
  /// - Parameters:
  ///   - name: 
  /// - Returns: Bool
  /// - Throws: 
  func has_auth(name: Uint64) throws -> Bool

  ///
  /// - Parameters:
  ///   - name: 
  ///   - permission: 
  /// - Throws: 
  func require_auth2(name: Uint64, permission: Uint64) throws

  ///
  /// - Parameters:
  ///   - name: 
  /// - Returns: Bool
  /// - Throws: 
  func is_account(name: Uint64) throws -> Bool

  ///
  /// - Parameters:
  ///   - serialized_action: 
  /// - Throws: 
  func send_inline(serialized_action: Data) throws

  ///
  /// - Parameters:
  ///   - serialized_data: 
  /// - Throws: 
  func send_context_free_inline(serialized_data: Data) throws

  ///
  /// - Returns: Uint64
  /// - Throws: 
  func publication_time() throws -> Uint64

  ///
  /// - Returns: Uint64
  /// - Throws: 
  func current_receiver() throws -> Uint64

  ///
  /// - Parameters:
  ///   - test: 
  ///   - msg: 
  /// - Throws: 
  func eosio_assert(test: Bool, msg: Data) throws

  ///
  /// - Parameters:
  ///   - test: 
  ///   - msg: 
  /// - Throws: 
  func eosio_assert_message(test: Bool, msg: Data) throws

  ///
  /// - Parameters:
  ///   - test: 
  ///   - code: 
  /// - Throws: 
  func eosio_assert_code(test: Bool, code: Uint64) throws

  ///
  /// - Parameters:
  ///   - code: 
  /// - Throws: 
  func eosio_exit(code: Int32) throws

  ///
  /// - Returns: Uint64
  /// - Throws: 
  func current_time() throws -> Uint64

  ///
  /// - Parameters:
  ///   - feature_digest: 
  /// - Returns: Bool
  /// - Throws: 
  func is_feature_activated(feature_digest: Data) throws -> Bool

  ///
  /// - Returns: Uint64
  /// - Throws: 
  func get_sender() throws -> Uint64

  ///
  /// - Parameters:
  ///   - data: 
  ///   - hash: 
  /// - Throws: 
  func assert_sha256(data: Data, hash: Data) throws

  ///
  /// - Parameters:
  ///   - data: 
  ///   - hash: 
  /// - Throws: 
  func assert_sha1(data: Data, hash: Data) throws

  ///
  /// - Parameters:
  ///   - data: 
  ///   - hash: 
  /// - Throws: 
  func assert_sha512(data: Data, hash: Data) throws

  ///
  /// - Parameters:
  ///   - data: 
  ///   - hash: 
  /// - Throws: 
  func assert_ripemd160(data: Data, hash: Data) throws

  ///
  /// - Parameters:
  ///   - data: 
  /// - Returns: Data
  /// - Throws: 
  func sha256(data: Data) throws -> Data

  ///
  /// - Parameters:
  ///   - data: 
  /// - Returns: Data
  /// - Throws: 
  func sha1(data: Data) throws -> Data

  ///
  /// - Parameters:
  ///   - data: 
  /// - Returns: Data
  /// - Throws: 
  func sha512(data: Data) throws -> Data

  ///
  /// - Parameters:
  ///   - data: 
  /// - Returns: Data
  /// - Throws: 
  func ripemd160(data: Data) throws -> Data

  ///
  /// - Parameters:
  ///   - digest: 
  ///   - sig: 
  /// - Returns: Data
  /// - Throws: 
  func recover_key(digest: Data, sig: Data) throws -> Data

  ///
  /// - Parameters:
  ///   - digest: 
  ///   - sig: 
  ///   - pub: 
  /// - Throws: 
  func assert_recover_key(digest: Data, sig: Data, pub: Data) throws

  ///
  /// - Parameters:
  ///   - sender_id: 
  ///   - payer: 
  ///   - serialized_transaction: 
  ///   - replace_existing: 
  /// - Throws: 
  func send_deferred(sender_id: Data, payer: Uint64, serialized_transaction: Data, replace_existing: Int32) throws

  ///
  /// - Parameters:
  ///   - sender_id: 
  /// - Returns: Int32
  /// - Throws: 
  func cancel_deferred(sender_id: Data) throws -> Int32

  ///
  /// - Returns: Data
  /// - Throws: 
  func read_transaction() throws -> Data

  ///
  /// - Returns: Int32
  /// - Throws: 
  func transaction_size() throws -> Int32

  ///
  /// - Returns: Int32
  /// - Throws: 
  func tapos_block_num() throws -> Int32

  ///
  /// - Returns: Int32
  /// - Throws: 
  func tapos_block_prefix() throws -> Int32

  ///
  /// - Returns: Int64
  /// - Throws: 
  func expiration() throws -> Int64

  ///
  /// - Parameters:
  ///   - _type: 
  ///   - index: 
  /// - Returns: Data
  /// - Throws: 
  func get_action(_type: Int32, index: Int32) throws -> Data

  ///
  /// - Parameters:
  ///   - index: 
  /// - Returns: Data
  /// - Throws: 
  func get_context_free_data(index: Int32) throws -> Data

  ///
  /// - Parameters:
  ///   - scope: 
  ///   - table: 
  ///   - payer: 
  ///   - id: 
  ///   - data: 
  /// - Returns: Int32
  /// - Throws: 
  func db_store_i64(scope: Uint64, table: Uint64, payer: Uint64, id: Uint64, data: Data) throws -> Int32

  ///
  /// - Parameters:
  ///   - iterator: 
  ///   - payer: 
  ///   - data: 
  /// - Throws: 
  func db_update_i64(iterator: Int32, payer: Uint64, data: Data) throws

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Throws: 
  func db_remove_i64(iterator: Int32) throws

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Returns: Data
  /// - Throws: 
  func db_get_i64(iterator: Int32) throws -> Data

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Returns: NextPreviousReturn
  /// - Throws: 
  func db_next_i64(iterator: Int32) throws -> NextPreviousReturn

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Returns: NextPreviousReturn
  /// - Throws: 
  func db_previous_i64(iterator: Int32) throws -> NextPreviousReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - id: 
  /// - Returns: Int32
  /// - Throws: 
  func db_find_i64(code: Uint64, scope: Uint64, table: Uint64, id: Uint64) throws -> Int32

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - id: 
  /// - Returns: Int32
  /// - Throws: 
  func db_lowerbound_i64(code: Uint64, scope: Uint64, table: Uint64, id: Uint64) throws -> Int32

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - id: 
  /// - Returns: Int32
  /// - Throws: 
  func db_upperbound_i64(code: Uint64, scope: Uint64, table: Uint64, id: Uint64) throws -> Int32

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  /// - Returns: Int32
  /// - Throws: 
  func db_end_i64(code: Uint64, scope: Uint64, table: Uint64) throws -> Int32

  ///
  /// - Parameters:
  ///   - scope: 
  ///   - table: 
  ///   - payer: 
  ///   - id: 
  ///   - secondary: 
  /// - Returns: Int32
  /// - Throws: 
  func db_idx64_store(scope: Uint64, table: Uint64, payer: Uint64, id: Uint64, secondary: Uint64) throws -> Int32

  ///
  /// - Parameters:
  ///   - iterator: 
  ///   - payer: 
  ///   - secondary: 
  /// - Throws: 
  func db_idx64_update(iterator: Int32, payer: Uint64, secondary: Uint64) throws

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Throws: 
  func db_idx64_remove(iterator: Int32) throws

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Returns: NextPreviousReturn
  /// - Throws: 
  func db_idx64_next(iterator: Int32) throws -> NextPreviousReturn

  ///
  /// - Parameters:
  ///   - iteratory: 
  /// - Returns: NextPreviousReturn
  /// - Throws: 
  func db_idx64_previous(iteratory: Int32) throws -> NextPreviousReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - primary: 
  /// - Returns: FindPrimaryReturn
  /// - Throws: 
  func db_idx64_find_primary(code: Uint64, scope: Uint64, table: Uint64, primary: Uint64) throws -> FindPrimaryReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - secondary: 
  /// - Returns: FindSecondaryReturn
  /// - Throws: 
  func db_idx64_find_secondary(code: Uint64, scope: Uint64, table: Uint64, secondary: Uint64) throws -> FindSecondaryReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - secondary: 
  ///   - primary: 
  /// - Returns: LowerBoundUpperBoundReturn
  /// - Throws: 
  func db_idx64_lowerbound(code: Uint64, scope: Uint64, table: Uint64, secondary: Uint64, primary: Uint64) throws -> LowerBoundUpperBoundReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - secondary: 
  ///   - primary: 
  /// - Returns: LowerBoundUpperBoundReturn
  /// - Throws: 
  func db_idx64_upperbound(code: Uint64, scope: Uint64, table: Uint64, secondary: Uint64, primary: Uint64) throws -> LowerBoundUpperBoundReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  /// - Returns: Int32
  /// - Throws: 
  func db_idx64_end(code: Uint64, scope: Uint64, table: Uint64) throws -> Int32

  ///
  /// - Parameters:
  ///   - scope: 
  ///   - table: 
  ///   - payer: 
  ///   - id: 
  ///   - secondary: 
  /// - Returns: Int32
  /// - Throws: 
  func db_idx128_store(scope: Uint64, table: Uint64, payer: Uint64, id: Uint64, secondary: Data) throws -> Int32

  ///
  /// - Parameters:
  ///   - iterator: 
  ///   - payer: 
  ///   - secondary: 
  /// - Throws: 
  func db_idx128_update(iterator: Int32, payer: Uint64, secondary: Data) throws

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Throws: 
  func db_idx128_remove(iterator: Int32) throws

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Returns: NextPreviousReturn
  /// - Throws: 
  func db_idx128_next(iterator: Int32) throws -> NextPreviousReturn

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Returns: NextPreviousReturn
  /// - Throws: 
  func db_idx128_previous(iterator: Int32) throws -> NextPreviousReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - primary: 
  /// - Returns: FindPrimaryReturn
  /// - Throws: 
  func db_idx128_find_primary(code: Uint64, scope: Uint64, table: Uint64, primary: Uint64) throws -> FindPrimaryReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - secondary: 
  /// - Returns: FindSecondaryReturn
  /// - Throws: 
  func db_idx128_find_secondary(code: Uint64, scope: Uint64, table: Uint64, secondary: Data) throws -> FindSecondaryReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - secondary: 
  ///   - primary: 
  /// - Returns: LowerBoundUpperBoundReturn
  /// - Throws: 
  func db_idx128_lowerbound(code: Uint64, scope: Uint64, table: Uint64, secondary: Data, primary: Uint64) throws -> LowerBoundUpperBoundReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - secondary: 
  ///   - primary: 
  /// - Returns: LowerBoundUpperBoundReturn
  /// - Throws: 
  func db_idx128_upperbound(code: Uint64, scope: Uint64, table: Uint64, secondary: Data, primary: Uint64) throws -> LowerBoundUpperBoundReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  /// - Returns: Int32
  /// - Throws: 
  func db_idx128_end(code: Uint64, scope: Uint64, table: Uint64) throws -> Int32

  ///
  /// - Parameters:
  ///   - scope: 
  ///   - table: 
  ///   - payer: 
  ///   - id: 
  ///   - data: 
  /// - Returns: Int32
  /// - Throws: 
  func db_idx256_store(scope: Uint64, table: Uint64, payer: Uint64, id: Uint64, data: Data) throws -> Int32

  ///
  /// - Parameters:
  ///   - iterator: 
  ///   - payer: 
  ///   - data: 
  /// - Throws: 
  func db_idx256_update(iterator: Int32, payer: Uint64, data: Data) throws

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Throws: 
  func db_idx256_remove(iterator: Int32) throws

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Returns: NextPreviousReturn
  /// - Throws: 
  func db_idx256_next(iterator: Int32) throws -> NextPreviousReturn

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Returns: NextPreviousReturn
  /// - Throws: 
  func db_idx256_previous(iterator: Int32) throws -> NextPreviousReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - primary: 
  /// - Returns: FindPrimaryReturn
  /// - Throws: 
  func db_idx256_find_primary(code: Uint64, scope: Uint64, table: Uint64, primary: Uint64) throws -> FindPrimaryReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - data: 
  /// - Returns: FindSecondaryReturn
  /// - Throws: 
  func db_idx256_find_secondary(code: Uint64, scope: Uint64, table: Uint64, data: Data) throws -> FindSecondaryReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - data: 
  ///   - primary: 
  /// - Returns: LowerBoundUpperBoundReturn
  /// - Throws: 
  func db_idx256_lowerbound(code: Uint64, scope: Uint64, table: Uint64, data: Data, primary: Uint64) throws -> LowerBoundUpperBoundReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - data: 
  ///   - primary: 
  /// - Returns: LowerBoundUpperBoundReturn
  /// - Throws: 
  func db_idx256_upperbound(code: Uint64, scope: Uint64, table: Uint64, data: Data, primary: Uint64) throws -> LowerBoundUpperBoundReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  /// - Returns: Int32
  /// - Throws: 
  func db_idx256_end(code: Uint64, scope: Uint64, table: Uint64) throws -> Int32

  ///
  /// - Parameters:
  ///   - scope: 
  ///   - table: 
  ///   - payer: 
  ///   - id: 
  ///   - secondary: 
  /// - Returns: Int32
  /// - Throws: 
  func db_idx_double_store(scope: Uint64, table: Uint64, payer: Uint64, id: Uint64, secondary: Data) throws -> Int32

  ///
  /// - Parameters:
  ///   - iterator: 
  ///   - payer: 
  ///   - secondary: 
  /// - Throws: 
  func db_idx_double_update(iterator: Int32, payer: Uint64, secondary: Data) throws

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Throws: 
  func db_idx_double_remove(iterator: Int32) throws

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Returns: NextPreviousReturn
  /// - Throws: 
  func db_idx_double_next(iterator: Int32) throws -> NextPreviousReturn

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Returns: NextPreviousReturn
  /// - Throws: 
  func db_idx_double_previous(iterator: Int32) throws -> NextPreviousReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - primary: 
  /// - Returns: FindPrimaryReturn
  /// - Throws: 
  func db_idx_double_find_primary(code: Uint64, scope: Uint64, table: Uint64, primary: Uint64) throws -> FindPrimaryReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - secondary: 
  /// - Returns: FindSecondaryReturn
  /// - Throws: 
  func db_idx_double_find_secondary(code: Uint64, scope: Uint64, table: Uint64, secondary: Data) throws -> FindSecondaryReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - secondary: 
  ///   - primary: 
  /// - Returns: LowerBoundUpperBoundReturn
  /// - Throws: 
  func db_idx_double_lowerbound(code: Uint64, scope: Uint64, table: Uint64, secondary: Data, primary: Uint64) throws -> LowerBoundUpperBoundReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - secondary: 
  ///   - primary: 
  /// - Returns: LowerBoundUpperBoundReturn
  /// - Throws: 
  func db_idx_double_upperbound(code: Uint64, scope: Uint64, table: Uint64, secondary: Data, primary: Uint64) throws -> LowerBoundUpperBoundReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  /// - Returns: Int32
  /// - Throws: 
  func db_idx_double_end(code: Uint64, scope: Uint64, table: Uint64) throws -> Int32

  ///
  /// - Parameters:
  ///   - scope: 
  ///   - table: 
  ///   - payer: 
  ///   - id: 
  ///   - secondary: 
  /// - Returns: Int32
  /// - Throws: 
  func db_idx_long_double_store(scope: Uint64, table: Uint64, payer: Uint64, id: Uint64, secondary: Data) throws -> Int32

  ///
  /// - Parameters:
  ///   - iterator: 
  ///   - payer: 
  ///   - secondary: 
  /// - Throws: 
  func db_idx_long_double_update(iterator: Int32, payer: Uint64, secondary: Data) throws

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Throws: 
  func db_idx_long_double_remove(iterator: Int32) throws

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Returns: NextPreviousReturn
  /// - Throws: 
  func db_idx_long_double_next(iterator: Int32) throws -> NextPreviousReturn

  ///
  /// - Parameters:
  ///   - iterator: 
  /// - Returns: NextPreviousReturn
  /// - Throws: 
  func db_idx_long_double_previous(iterator: Int32) throws -> NextPreviousReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - primary: 
  /// - Returns: FindPrimaryReturn
  /// - Throws: 
  func db_idx_long_double_find_primary(code: Uint64, scope: Uint64, table: Uint64, primary: Uint64) throws -> FindPrimaryReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - secondary: 
  /// - Returns: FindSecondaryReturn
  /// - Throws: 
  func db_idx_long_double_find_secondary(code: Uint64, scope: Uint64, table: Uint64, secondary: Data) throws -> FindSecondaryReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - secondary: 
  ///   - primary: 
  /// - Returns: LowerBoundUpperBoundReturn
  /// - Throws: 
  func db_idx_long_double_lowerbound(code: Uint64, scope: Uint64, table: Uint64, secondary: Data, primary: Uint64) throws -> LowerBoundUpperBoundReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  ///   - secondary: 
  ///   - primary: 
  /// - Returns: LowerBoundUpperBoundReturn
  /// - Throws: 
  func db_idx_long_double_upperbound(code: Uint64, scope: Uint64, table: Uint64, secondary: Data, primary: Uint64) throws -> LowerBoundUpperBoundReturn

  ///
  /// - Parameters:
  ///   - code: 
  ///   - scope: 
  ///   - table: 
  /// - Returns: Int32
  /// - Throws: 
  func db_idx_long_double_end(code: Uint64, scope: Uint64, table: Uint64) throws -> Int32

}

open class ApplyClient : TClient /* , Apply */ {

}

open class ApplyProcessor /* Apply */ {

  typealias ProcessorHandlerDictionary = [String: (Int32, TProtocol, TProtocol, Apply) throws -> Void]

  public var service: Apply

  public required init(service: Apply) {
    self.service = service
  }

}


